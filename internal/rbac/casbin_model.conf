[request_definition]
# 请求: 用户ID, 平台ID, 路由, 请求方式
r = sub, tenant, obj, act

[policy_definition]
p = sub, tenant, obj, act
pu = sub, tenant, obj, act
# 角色策略:         角色标识(role::角色ID),                 NameSpace, 路由, 请求方式 
# 用户策略:         用户标识(user::用户ID),                 NameSpace, 路由, 请求方式 
# 权限组策略:       权限组标识(route_group::权限组ID),       NameSpace, 路由, 请求方式 
# 用户组策略:       用户组标识(route_group::用户组ID),       NameSpace, 路由, 请求方式 

# 所有权限:         固定唯一标识(all::route),         NameSpace, 路由, 请求方式, 名称, 描述
# 所有角色:         固定唯一标识(all::role),          NameSpace, 名称, 描述, 创建人ID
# 所有权限组:        固定唯一标识(all::route_group),   NameSpace, 名称, 描述, 创建人ID
# 所有用户组:        固定唯一标识(all::user_group),    NameSpace, 名称, 描述, 创建人ID

[role_definition]
g = _, _, _

# g 用户->超管关系(所有权限):    用户(openID),              超管标识(all::route),                NameSpace 
# g 用户->权限组关系:           用户(openID),              权限组标识(route_group::权限组ID),     NameSpace
# g 用户->角色关系:             用户(openID),              角色标识(role::角色ID),               NameSpace
# g 用户->用户组关系:           用户(openID),            用户组标识(route_group::用户组ID),       NameSpace




# g 用户->用户关系:             用户(openID),           被继承用户标识(user::用户ID),            NameSpace 
# g 角色->权限组关系:      角色标识(role::角色ID),          权限组标识(route_group::权限组ID),     NameSpace
# g 用户组->权限组关系:  用户组标识(route_group::用户组ID),  权限组标识(route_group::权限组ID),     NameSpace
# g 用户组->角色关系:  用户组标识(route_group::用户组ID),    角色标识(role::角色ID),               NameSpace





[policy_effect]
e = some(where (p.eft == allow))

[matchers]
m = g(r.sub, p.sub, r.tenant) && r.tenant == p.tenant && keyMatch2(r.obj, p.obj) && r.act == p.act
