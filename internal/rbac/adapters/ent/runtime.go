// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/keepondream/RBAC_service/internal/rbac/adapters/ent/group"
	"github.com/keepondream/RBAC_service/internal/rbac/adapters/ent/node"
	"github.com/keepondream/RBAC_service/internal/rbac/adapters/ent/permission"
	"github.com/keepondream/RBAC_service/internal/rbac/adapters/ent/route"
	"github.com/keepondream/RBAC_service/internal/rbac/adapters/ent/schema"
	"github.com/keepondream/RBAC_service/internal/rbac/adapters/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescTenant is the schema descriptor for tenant field.
	groupDescTenant := groupFields[0].Descriptor()
	// group.TenantValidator is a validator for the "tenant" field. It is called by the builders before save.
	group.TenantValidator = groupDescTenant.Validators[0].(func(string) error)
	// groupDescName is the schema descriptor for name field.
	groupDescName := groupFields[1].Descriptor()
	// group.NameValidator is a validator for the "name" field. It is called by the builders before save.
	group.NameValidator = groupDescName.Validators[0].(func(string) error)
	// groupDescType is the schema descriptor for type field.
	groupDescType := groupFields[2].Descriptor()
	// group.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	group.TypeValidator = groupDescType.Validators[0].(func(string) error)
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupFields[5].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	// groupDescUpdatedAt is the schema descriptor for updated_at field.
	groupDescUpdatedAt := groupFields[6].Descriptor()
	// group.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	group.DefaultUpdatedAt = groupDescUpdatedAt.Default.(func() time.Time)
	// group.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	group.UpdateDefaultUpdatedAt = groupDescUpdatedAt.UpdateDefault.(func() time.Time)
	nodeFields := schema.Node{}.Fields()
	_ = nodeFields
	// nodeDescTenant is the schema descriptor for tenant field.
	nodeDescTenant := nodeFields[0].Descriptor()
	// node.TenantValidator is a validator for the "tenant" field. It is called by the builders before save.
	node.TenantValidator = nodeDescTenant.Validators[0].(func(string) error)
	// nodeDescName is the schema descriptor for name field.
	nodeDescName := nodeFields[1].Descriptor()
	// node.NameValidator is a validator for the "name" field. It is called by the builders before save.
	node.NameValidator = nodeDescName.Validators[0].(func(string) error)
	// nodeDescType is the schema descriptor for type field.
	nodeDescType := nodeFields[2].Descriptor()
	// node.TypeValidator is a validator for the "type" field. It is called by the builders before save.
	node.TypeValidator = nodeDescType.Validators[0].(func(string) error)
	// nodeDescCreatedAt is the schema descriptor for created_at field.
	nodeDescCreatedAt := nodeFields[5].Descriptor()
	// node.DefaultCreatedAt holds the default value on creation for the created_at field.
	node.DefaultCreatedAt = nodeDescCreatedAt.Default.(func() time.Time)
	// nodeDescUpdatedAt is the schema descriptor for updated_at field.
	nodeDescUpdatedAt := nodeFields[6].Descriptor()
	// node.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	node.DefaultUpdatedAt = nodeDescUpdatedAt.Default.(func() time.Time)
	// node.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	node.UpdateDefaultUpdatedAt = nodeDescUpdatedAt.UpdateDefault.(func() time.Time)
	permissionFields := schema.Permission{}.Fields()
	_ = permissionFields
	// permissionDescTenant is the schema descriptor for tenant field.
	permissionDescTenant := permissionFields[0].Descriptor()
	// permission.TenantValidator is a validator for the "tenant" field. It is called by the builders before save.
	permission.TenantValidator = permissionDescTenant.Validators[0].(func(string) error)
	// permissionDescName is the schema descriptor for name field.
	permissionDescName := permissionFields[1].Descriptor()
	// permission.NameValidator is a validator for the "name" field. It is called by the builders before save.
	permission.NameValidator = permissionDescName.Validators[0].(func(string) error)
	// permissionDescCreatedAt is the schema descriptor for created_at field.
	permissionDescCreatedAt := permissionFields[3].Descriptor()
	// permission.DefaultCreatedAt holds the default value on creation for the created_at field.
	permission.DefaultCreatedAt = permissionDescCreatedAt.Default.(func() time.Time)
	// permissionDescUpdatedAt is the schema descriptor for updated_at field.
	permissionDescUpdatedAt := permissionFields[4].Descriptor()
	// permission.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	permission.DefaultUpdatedAt = permissionDescUpdatedAt.Default.(func() time.Time)
	// permission.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	permission.UpdateDefaultUpdatedAt = permissionDescUpdatedAt.UpdateDefault.(func() time.Time)
	routeFields := schema.Route{}.Fields()
	_ = routeFields
	// routeDescTenant is the schema descriptor for tenant field.
	routeDescTenant := routeFields[0].Descriptor()
	// route.TenantValidator is a validator for the "tenant" field. It is called by the builders before save.
	route.TenantValidator = routeDescTenant.Validators[0].(func(string) error)
	// routeDescName is the schema descriptor for name field.
	routeDescName := routeFields[1].Descriptor()
	// route.NameValidator is a validator for the "name" field. It is called by the builders before save.
	route.NameValidator = routeDescName.Validators[0].(func(string) error)
	// routeDescURI is the schema descriptor for uri field.
	routeDescURI := routeFields[2].Descriptor()
	// route.URIValidator is a validator for the "uri" field. It is called by the builders before save.
	route.URIValidator = routeDescURI.Validators[0].(func(string) error)
	// routeDescCreatedAt is the schema descriptor for created_at field.
	routeDescCreatedAt := routeFields[5].Descriptor()
	// route.DefaultCreatedAt holds the default value on creation for the created_at field.
	route.DefaultCreatedAt = routeDescCreatedAt.Default.(func() time.Time)
	// routeDescUpdatedAt is the schema descriptor for updated_at field.
	routeDescUpdatedAt := routeFields[6].Descriptor()
	// route.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	route.DefaultUpdatedAt = routeDescUpdatedAt.Default.(func() time.Time)
	// route.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	route.UpdateDefaultUpdatedAt = routeDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescTenant is the schema descriptor for tenant field.
	userDescTenant := userFields[0].Descriptor()
	// user.TenantValidator is a validator for the "tenant" field. It is called by the builders before save.
	user.TenantValidator = userDescTenant.Validators[0].(func(string) error)
	// userDescUUID is the schema descriptor for uuid field.
	userDescUUID := userFields[1].Descriptor()
	// user.UUIDValidator is a validator for the "uuid" field. It is called by the builders before save.
	user.UUIDValidator = userDescUUID.Validators[0].(func(string) error)
	// userDescIsSuper is the schema descriptor for is_super field.
	userDescIsSuper := userFields[3].Descriptor()
	// user.DefaultIsSuper holds the default value on creation for the is_super field.
	user.DefaultIsSuper = userDescIsSuper.Default.(bool)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[5].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[6].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}
